{"version":3,"sources":["App.tsx","index.tsx"],"names":["Row","props","children","pressProps","usePress","preventFocusOnPress","keyboardProps","useKeyboard","onKeyDown","e","console","log","key","focusClass","focusRingClass","tabIndex","App","onPress","rootElement","document","getElementById","render"],"mappings":"4MAUMA,EAAM,SAACC,GACX,IAAQC,EAAaD,EAAbC,SACAC,EAAeC,YAAS,aAAEC,qBAAqB,GAASJ,IAAxDE,WAEAG,EAAkBC,YAAY,CACpCC,UAAW,SAACC,GACVC,QAAQC,IAAIF,EAAEG,QAFVN,cAKR,OACE,gBAAC,IAAD,CAAWO,WAAW,QAAQC,eAAe,SAC3C,oCAAIC,SAAU,GAAOZ,EAAgBG,GAClCJ,EACD,0CAcOc,EARC,WACd,OACE,0BACE,gBAAC,EAAD,CAAKC,QAAS,kBAAMP,QAAQC,IAAI,aAAhC,iBC5BAO,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAAC,EAAD,MAASH,K","file":"static/js/main.64095cac.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { FC } from \"react\";\nimport { usePress, useKeyboard } from \"@react-aria/interactions\";\nimport { PressEvents } from \"@react-types/shared\";\nimport { FocusRing } from \"@react-aria/focus\";\n\ninterface RowProps extends PressEvents {\n  children: React.ReactNode;\n}\n\nconst Row = (props: RowProps) => {\n  const { children } = props;\n  const { pressProps } = usePress({ preventFocusOnPress: true, ...props });\n\n  const { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      console.log(e.key);\n    }\n  });\n  return (\n    <FocusRing focusClass=\"focus\" focusRingClass=\"focus\">\n      <li tabIndex={0} {...pressProps} {...keyboardProps}>\n        {children}\n        <button>Click</button>\n      </li>\n    </FocusRing>\n  );\n};\n\nconst App: FC = () => {\n  return (\n    <ul>\n      <Row onPress={() => console.log(\"Pressed\")}>Hello world</Row>\n    </ul>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}